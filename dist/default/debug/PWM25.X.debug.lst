

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Oct 07 10:58:09 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0008                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  000E                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  008C                     	;# 
    63  008E                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  010C                     	;# 
    79  010E                     	;# 
    80  0111                     	;# 
    81  0112                     	;# 
    82  0113                     	;# 
    83  0114                     	;# 
    84  0115                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  0118                     	;# 
    88  0119                     	;# 
    89  011A                     	;# 
    90  011B                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  018C                     	;# 
    94  018E                     	;# 
    95  0191                     	;# 
    96  0191                     	;# 
    97  0192                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0194                     	;# 
   102  0195                     	;# 
   103  0196                     	;# 
   104  0199                     	;# 
   105  019A                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019E                     	;# 
   111  019F                     	;# 
   112  020C                     	;# 
   113  020E                     	;# 
   114  0211                     	;# 
   115  0211                     	;# 
   116  0212                     	;# 
   117  0212                     	;# 
   118  0213                     	;# 
   119  0213                     	;# 
   120  0214                     	;# 
   121  0214                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0216                     	;# 
   126  0216                     	;# 
   127  0217                     	;# 
   128  0217                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0298                     	;# 
   138  0298                     	;# 
   139  0299                     	;# 
   140  029A                     	;# 
   141  029B                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  0311                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0318                     	;# 
   150  0318                     	;# 
   151  0319                     	;# 
   152  031A                     	;# 
   153  038C                     	;# 
   154  038E                     	;# 
   155  0391                     	;# 
   156  0392                     	;# 
   157  0393                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0415                     	;# 
   164  0416                     	;# 
   165  0417                     	;# 
   166  041C                     	;# 
   167  041D                     	;# 
   168  041E                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000E                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  008C                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010E                     	;# 
   226  0111                     	;# 
   227  0112                     	;# 
   228  0113                     	;# 
   229  0114                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  0118                     	;# 
   234  0119                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011D                     	;# 
   238  011E                     	;# 
   239  018C                     	;# 
   240  018E                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020E                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0291                     	;# 
   276  0291                     	;# 
   277  0292                     	;# 
   278  0293                     	;# 
   279  0294                     	;# 
   280  0295                     	;# 
   281  0295                     	;# 
   282  0296                     	;# 
   283  0298                     	;# 
   284  0298                     	;# 
   285  0299                     	;# 
   286  029A                     	;# 
   287  029B                     	;# 
   288  029C                     	;# 
   289  029D                     	;# 
   290  029E                     	;# 
   291  0311                     	;# 
   292  0311                     	;# 
   293  0312                     	;# 
   294  0313                     	;# 
   295  0318                     	;# 
   296  0318                     	;# 
   297  0319                     	;# 
   298  031A                     	;# 
   299  038C                     	;# 
   300  038E                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  0393                     	;# 
   304  039A                     	;# 
   305  039C                     	;# 
   306  039D                     	;# 
   307  039E                     	;# 
   308  039F                     	;# 
   309  0415                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  041C                     	;# 
   313  041D                     	;# 
   314  041E                     	;# 
   315  0FE4                     	;# 
   316  0FE5                     	;# 
   317  0FE6                     	;# 
   318  0FE7                     	;# 
   319  0FE8                     	;# 
   320  0FE9                     	;# 
   321  0FEA                     	;# 
   322  0FEB                     	;# 
   323  0FED                     	;# 
   324  0FEE                     	;# 
   325  0FEF                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000E                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  008C                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  010C                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011D                     	;# 
   384  011E                     	;# 
   385  018C                     	;# 
   386  018E                     	;# 
   387  0191                     	;# 
   388  0191                     	;# 
   389  0192                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0194                     	;# 
   394  0195                     	;# 
   395  0196                     	;# 
   396  0199                     	;# 
   397  019A                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019C                     	;# 
   401  019D                     	;# 
   402  019E                     	;# 
   403  019F                     	;# 
   404  020C                     	;# 
   405  020E                     	;# 
   406  0211                     	;# 
   407  0211                     	;# 
   408  0212                     	;# 
   409  0212                     	;# 
   410  0213                     	;# 
   411  0213                     	;# 
   412  0214                     	;# 
   413  0214                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0216                     	;# 
   418  0216                     	;# 
   419  0217                     	;# 
   420  0217                     	;# 
   421  0291                     	;# 
   422  0291                     	;# 
   423  0292                     	;# 
   424  0293                     	;# 
   425  0294                     	;# 
   426  0295                     	;# 
   427  0295                     	;# 
   428  0296                     	;# 
   429  0298                     	;# 
   430  0298                     	;# 
   431  0299                     	;# 
   432  029A                     	;# 
   433  029B                     	;# 
   434  029C                     	;# 
   435  029D                     	;# 
   436  029E                     	;# 
   437  0311                     	;# 
   438  0311                     	;# 
   439  0312                     	;# 
   440  0313                     	;# 
   441  0318                     	;# 
   442  0318                     	;# 
   443  0319                     	;# 
   444  031A                     	;# 
   445  038C                     	;# 
   446  038E                     	;# 
   447  0391                     	;# 
   448  0392                     	;# 
   449  0393                     	;# 
   450  039A                     	;# 
   451  039C                     	;# 
   452  039D                     	;# 
   453  039E                     	;# 
   454  039F                     	;# 
   455  0415                     	;# 
   456  0416                     	;# 
   457  0417                     	;# 
   458  041C                     	;# 
   459  041D                     	;# 
   460  041E                     	;# 
   461  0FE4                     	;# 
   462  0FE5                     	;# 
   463  0FE6                     	;# 
   464  0FE7                     	;# 
   465  0FE8                     	;# 
   466  0FE9                     	;# 
   467  0FEA                     	;# 
   468  0FEB                     	;# 
   469  0FED                     	;# 
   470  0FEE                     	;# 
   471  0FEF                     	;# 
   472  0000                     	;# 
   473  0001                     	;# 
   474  0002                     	;# 
   475  0003                     	;# 
   476  0004                     	;# 
   477  0005                     	;# 
   478  0006                     	;# 
   479  0007                     	;# 
   480  0008                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000E                     	;# 
   486  0011                     	;# 
   487  0012                     	;# 
   488  0013                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0016                     	;# 
   492  0017                     	;# 
   493  0018                     	;# 
   494  0019                     	;# 
   495  001A                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001E                     	;# 
   499  001F                     	;# 
   500  008C                     	;# 
   501  008E                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009B                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  010C                     	;# 
   517  010E                     	;# 
   518  0111                     	;# 
   519  0112                     	;# 
   520  0113                     	;# 
   521  0114                     	;# 
   522  0115                     	;# 
   523  0116                     	;# 
   524  0117                     	;# 
   525  0118                     	;# 
   526  0119                     	;# 
   527  011A                     	;# 
   528  011B                     	;# 
   529  011D                     	;# 
   530  011E                     	;# 
   531  018C                     	;# 
   532  018E                     	;# 
   533  0191                     	;# 
   534  0191                     	;# 
   535  0192                     	;# 
   536  0193                     	;# 
   537  0193                     	;# 
   538  0193                     	;# 
   539  0194                     	;# 
   540  0195                     	;# 
   541  0196                     	;# 
   542  0199                     	;# 
   543  019A                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019C                     	;# 
   547  019D                     	;# 
   548  019E                     	;# 
   549  019F                     	;# 
   550  020C                     	;# 
   551  020E                     	;# 
   552  0211                     	;# 
   553  0211                     	;# 
   554  0212                     	;# 
   555  0212                     	;# 
   556  0213                     	;# 
   557  0213                     	;# 
   558  0214                     	;# 
   559  0214                     	;# 
   560  0215                     	;# 
   561  0215                     	;# 
   562  0215                     	;# 
   563  0216                     	;# 
   564  0216                     	;# 
   565  0217                     	;# 
   566  0217                     	;# 
   567  0291                     	;# 
   568  0291                     	;# 
   569  0292                     	;# 
   570  0293                     	;# 
   571  0294                     	;# 
   572  0295                     	;# 
   573  0295                     	;# 
   574  0296                     	;# 
   575  0298                     	;# 
   576  0298                     	;# 
   577  0299                     	;# 
   578  029A                     	;# 
   579  029B                     	;# 
   580  029C                     	;# 
   581  029D                     	;# 
   582  029E                     	;# 
   583  0311                     	;# 
   584  0311                     	;# 
   585  0312                     	;# 
   586  0313                     	;# 
   587  0318                     	;# 
   588  0318                     	;# 
   589  0319                     	;# 
   590  031A                     	;# 
   591  038C                     	;# 
   592  038E                     	;# 
   593  0391                     	;# 
   594  0392                     	;# 
   595  0393                     	;# 
   596  039A                     	;# 
   597  039C                     	;# 
   598  039D                     	;# 
   599  039E                     	;# 
   600  039F                     	;# 
   601  0415                     	;# 
   602  0416                     	;# 
   603  0417                     	;# 
   604  041C                     	;# 
   605  041D                     	;# 
   606  041E                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000E                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0013                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0016                     	;# 
   638  0017                     	;# 
   639  0018                     	;# 
   640  0019                     	;# 
   641  001A                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  008C                     	;# 
   647  008E                     	;# 
   648  0091                     	;# 
   649  0092                     	;# 
   650  0093                     	;# 
   651  0095                     	;# 
   652  0096                     	;# 
   653  0097                     	;# 
   654  0098                     	;# 
   655  0099                     	;# 
   656  009A                     	;# 
   657  009B                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  010C                     	;# 
   663  010E                     	;# 
   664  0111                     	;# 
   665  0112                     	;# 
   666  0113                     	;# 
   667  0114                     	;# 
   668  0115                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0118                     	;# 
   672  0119                     	;# 
   673  011A                     	;# 
   674  011B                     	;# 
   675  011D                     	;# 
   676  011E                     	;# 
   677  018C                     	;# 
   678  018E                     	;# 
   679  0191                     	;# 
   680  0191                     	;# 
   681  0192                     	;# 
   682  0193                     	;# 
   683  0193                     	;# 
   684  0193                     	;# 
   685  0194                     	;# 
   686  0195                     	;# 
   687  0196                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019B                     	;# 
   692  019C                     	;# 
   693  019D                     	;# 
   694  019E                     	;# 
   695  019F                     	;# 
   696  020C                     	;# 
   697  020E                     	;# 
   698  0211                     	;# 
   699  0211                     	;# 
   700  0212                     	;# 
   701  0212                     	;# 
   702  0213                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0214                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0215                     	;# 
   709  0216                     	;# 
   710  0216                     	;# 
   711  0217                     	;# 
   712  0217                     	;# 
   713  0291                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0293                     	;# 
   717  0294                     	;# 
   718  0295                     	;# 
   719  0295                     	;# 
   720  0296                     	;# 
   721  0298                     	;# 
   722  0298                     	;# 
   723  0299                     	;# 
   724  029A                     	;# 
   725  029B                     	;# 
   726  029C                     	;# 
   727  029D                     	;# 
   728  029E                     	;# 
   729  0311                     	;# 
   730  0311                     	;# 
   731  0312                     	;# 
   732  0313                     	;# 
   733  0318                     	;# 
   734  0318                     	;# 
   735  0319                     	;# 
   736  031A                     	;# 
   737  038C                     	;# 
   738  038E                     	;# 
   739  0391                     	;# 
   740  0392                     	;# 
   741  0393                     	;# 
   742  039A                     	;# 
   743  039C                     	;# 
   744  039D                     	;# 
   745  039E                     	;# 
   746  039F                     	;# 
   747  0415                     	;# 
   748  0416                     	;# 
   749  0417                     	;# 
   750  041C                     	;# 
   751  041D                     	;# 
   752  041E                     	;# 
   753  0FE4                     	;# 
   754  0FE5                     	;# 
   755  0FE6                     	;# 
   756  0FE7                     	;# 
   757  0FE8                     	;# 
   758  0FE9                     	;# 
   759  0FEA                     	;# 
   760  0FEB                     	;# 
   761  0FED                     	;# 
   762  0FEE                     	;# 
   763  0FEF                     	;# 
   764  0000                     	;# 
   765  0001                     	;# 
   766  0002                     	;# 
   767  0003                     	;# 
   768  0004                     	;# 
   769  0005                     	;# 
   770  0006                     	;# 
   771  0007                     	;# 
   772  0008                     	;# 
   773  0009                     	;# 
   774  000A                     	;# 
   775  000B                     	;# 
   776  000C                     	;# 
   777  000E                     	;# 
   778  0011                     	;# 
   779  0012                     	;# 
   780  0013                     	;# 
   781  0015                     	;# 
   782  0016                     	;# 
   783  0016                     	;# 
   784  0017                     	;# 
   785  0018                     	;# 
   786  0019                     	;# 
   787  001A                     	;# 
   788  001B                     	;# 
   789  001C                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  008C                     	;# 
   793  008E                     	;# 
   794  0091                     	;# 
   795  0092                     	;# 
   796  0093                     	;# 
   797  0095                     	;# 
   798  0096                     	;# 
   799  0097                     	;# 
   800  0098                     	;# 
   801  0099                     	;# 
   802  009A                     	;# 
   803  009B                     	;# 
   804  009B                     	;# 
   805  009C                     	;# 
   806  009D                     	;# 
   807  009E                     	;# 
   808  010C                     	;# 
   809  010E                     	;# 
   810  0111                     	;# 
   811  0112                     	;# 
   812  0113                     	;# 
   813  0114                     	;# 
   814  0115                     	;# 
   815  0116                     	;# 
   816  0117                     	;# 
   817  0118                     	;# 
   818  0119                     	;# 
   819  011A                     	;# 
   820  011B                     	;# 
   821  011D                     	;# 
   822  011E                     	;# 
   823  018C                     	;# 
   824  018E                     	;# 
   825  0191                     	;# 
   826  0191                     	;# 
   827  0192                     	;# 
   828  0193                     	;# 
   829  0193                     	;# 
   830  0193                     	;# 
   831  0194                     	;# 
   832  0195                     	;# 
   833  0196                     	;# 
   834  0199                     	;# 
   835  019A                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019C                     	;# 
   839  019D                     	;# 
   840  019E                     	;# 
   841  019F                     	;# 
   842  020C                     	;# 
   843  020E                     	;# 
   844  0211                     	;# 
   845  0211                     	;# 
   846  0212                     	;# 
   847  0212                     	;# 
   848  0213                     	;# 
   849  0213                     	;# 
   850  0214                     	;# 
   851  0214                     	;# 
   852  0215                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0216                     	;# 
   856  0216                     	;# 
   857  0217                     	;# 
   858  0217                     	;# 
   859  0291                     	;# 
   860  0291                     	;# 
   861  0292                     	;# 
   862  0293                     	;# 
   863  0294                     	;# 
   864  0295                     	;# 
   865  0295                     	;# 
   866  0296                     	;# 
   867  0298                     	;# 
   868  0298                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029B                     	;# 
   872  029C                     	;# 
   873  029D                     	;# 
   874  029E                     	;# 
   875  0311                     	;# 
   876  0311                     	;# 
   877  0312                     	;# 
   878  0313                     	;# 
   879  0318                     	;# 
   880  0318                     	;# 
   881  0319                     	;# 
   882  031A                     	;# 
   883  038C                     	;# 
   884  038E                     	;# 
   885  0391                     	;# 
   886  0392                     	;# 
   887  0393                     	;# 
   888  039A                     	;# 
   889  039C                     	;# 
   890  039D                     	;# 
   891  039E                     	;# 
   892  039F                     	;# 
   893  0415                     	;# 
   894  0416                     	;# 
   895  0417                     	;# 
   896  041C                     	;# 
   897  041D                     	;# 
   898  041E                     	;# 
   899  0FE4                     	;# 
   900  0FE5                     	;# 
   901  0FE6                     	;# 
   902  0FE7                     	;# 
   903  0FE8                     	;# 
   904  0FE9                     	;# 
   905  0FEA                     	;# 
   906  0FEB                     	;# 
   907  0FED                     	;# 
   908  0FEE                     	;# 
   909  0FEF                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0008                     	;# 
   919  0009                     	;# 
   920  000A                     	;# 
   921  000B                     	;# 
   922  000C                     	;# 
   923  000E                     	;# 
   924  0011                     	;# 
   925  0012                     	;# 
   926  0013                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  001E                     	;# 
   937  001F                     	;# 
   938  008C                     	;# 
   939  008E                     	;# 
   940  0091                     	;# 
   941  0092                     	;# 
   942  0093                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0097                     	;# 
   946  0098                     	;# 
   947  0099                     	;# 
   948  009A                     	;# 
   949  009B                     	;# 
   950  009B                     	;# 
   951  009C                     	;# 
   952  009D                     	;# 
   953  009E                     	;# 
   954  010C                     	;# 
   955  010E                     	;# 
   956  0111                     	;# 
   957  0112                     	;# 
   958  0113                     	;# 
   959  0114                     	;# 
   960  0115                     	;# 
   961  0116                     	;# 
   962  0117                     	;# 
   963  0118                     	;# 
   964  0119                     	;# 
   965  011A                     	;# 
   966  011B                     	;# 
   967  011D                     	;# 
   968  011E                     	;# 
   969  018C                     	;# 
   970  018E                     	;# 
   971  0191                     	;# 
   972  0191                     	;# 
   973  0192                     	;# 
   974  0193                     	;# 
   975  0193                     	;# 
   976  0193                     	;# 
   977  0194                     	;# 
   978  0195                     	;# 
   979  0196                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  020C                     	;# 
   989  020E                     	;# 
   990  0211                     	;# 
   991  0211                     	;# 
   992  0212                     	;# 
   993  0212                     	;# 
   994  0213                     	;# 
   995  0213                     	;# 
   996  0214                     	;# 
   997  0214                     	;# 
   998  0215                     	;# 
   999  0215                     	;# 
  1000  0215                     	;# 
  1001  0216                     	;# 
  1002  0216                     	;# 
  1003  0217                     	;# 
  1004  0217                     	;# 
  1005  0291                     	;# 
  1006  0291                     	;# 
  1007  0292                     	;# 
  1008  0293                     	;# 
  1009  0294                     	;# 
  1010  0295                     	;# 
  1011  0295                     	;# 
  1012  0296                     	;# 
  1013  0298                     	;# 
  1014  0298                     	;# 
  1015  0299                     	;# 
  1016  029A                     	;# 
  1017  029B                     	;# 
  1018  029C                     	;# 
  1019  029D                     	;# 
  1020  029E                     	;# 
  1021  0311                     	;# 
  1022  0311                     	;# 
  1023  0312                     	;# 
  1024  0313                     	;# 
  1025  0318                     	;# 
  1026  0318                     	;# 
  1027  0319                     	;# 
  1028  031A                     	;# 
  1029  038C                     	;# 
  1030  038E                     	;# 
  1031  0391                     	;# 
  1032  0392                     	;# 
  1033  0393                     	;# 
  1034  039A                     	;# 
  1035  039C                     	;# 
  1036  039D                     	;# 
  1037  039E                     	;# 
  1038  039F                     	;# 
  1039  0415                     	;# 
  1040  0416                     	;# 
  1041  0417                     	;# 
  1042  041C                     	;# 
  1043  041D                     	;# 
  1044  041E                     	;# 
  1045  0FE4                     	;# 
  1046  0FE5                     	;# 
  1047  0FE6                     	;# 
  1048  0FE7                     	;# 
  1049  0FE8                     	;# 
  1050  0FE9                     	;# 
  1051  0FEA                     	;# 
  1052  0FEB                     	;# 
  1053  0FED                     	;# 
  1054  0FEE                     	;# 
  1055  0FEF                     	;# 
  1056  0000                     	;# 
  1057  0001                     	;# 
  1058  0002                     	;# 
  1059  0003                     	;# 
  1060  0004                     	;# 
  1061  0005                     	;# 
  1062  0006                     	;# 
  1063  0007                     	;# 
  1064  0008                     	;# 
  1065  0009                     	;# 
  1066  000A                     	;# 
  1067  000B                     	;# 
  1068  000C                     	;# 
  1069  000E                     	;# 
  1070  0011                     	;# 
  1071  0012                     	;# 
  1072  0013                     	;# 
  1073  0015                     	;# 
  1074  0016                     	;# 
  1075  0016                     	;# 
  1076  0017                     	;# 
  1077  0018                     	;# 
  1078  0019                     	;# 
  1079  001A                     	;# 
  1080  001B                     	;# 
  1081  001C                     	;# 
  1082  001E                     	;# 
  1083  001F                     	;# 
  1084  008C                     	;# 
  1085  008E                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0097                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009A                     	;# 
  1095  009B                     	;# 
  1096  009B                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009E                     	;# 
  1100  010C                     	;# 
  1101  010E                     	;# 
  1102  0111                     	;# 
  1103  0112                     	;# 
  1104  0113                     	;# 
  1105  0114                     	;# 
  1106  0115                     	;# 
  1107  0116                     	;# 
  1108  0117                     	;# 
  1109  0118                     	;# 
  1110  0119                     	;# 
  1111  011A                     	;# 
  1112  011B                     	;# 
  1113  011D                     	;# 
  1114  011E                     	;# 
  1115  018C                     	;# 
  1116  018E                     	;# 
  1117  0191                     	;# 
  1118  0191                     	;# 
  1119  0192                     	;# 
  1120  0193                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0194                     	;# 
  1124  0195                     	;# 
  1125  0196                     	;# 
  1126  0199                     	;# 
  1127  019A                     	;# 
  1128  019B                     	;# 
  1129  019B                     	;# 
  1130  019C                     	;# 
  1131  019D                     	;# 
  1132  019E                     	;# 
  1133  019F                     	;# 
  1134  020C                     	;# 
  1135  020E                     	;# 
  1136  0211                     	;# 
  1137  0211                     	;# 
  1138  0212                     	;# 
  1139  0212                     	;# 
  1140  0213                     	;# 
  1141  0213                     	;# 
  1142  0214                     	;# 
  1143  0214                     	;# 
  1144  0215                     	;# 
  1145  0215                     	;# 
  1146  0215                     	;# 
  1147  0216                     	;# 
  1148  0216                     	;# 
  1149  0217                     	;# 
  1150  0217                     	;# 
  1151  0291                     	;# 
  1152  0291                     	;# 
  1153  0292                     	;# 
  1154  0293                     	;# 
  1155  0294                     	;# 
  1156  0295                     	;# 
  1157  0295                     	;# 
  1158  0296                     	;# 
  1159  0298                     	;# 
  1160  0298                     	;# 
  1161  0299                     	;# 
  1162  029A                     	;# 
  1163  029B                     	;# 
  1164  029C                     	;# 
  1165  029D                     	;# 
  1166  029E                     	;# 
  1167  0311                     	;# 
  1168  0311                     	;# 
  1169  0312                     	;# 
  1170  0313                     	;# 
  1171  0318                     	;# 
  1172  0318                     	;# 
  1173  0319                     	;# 
  1174  031A                     	;# 
  1175  038C                     	;# 
  1176  038E                     	;# 
  1177  0391                     	;# 
  1178  0392                     	;# 
  1179  0393                     	;# 
  1180  039A                     	;# 
  1181  039C                     	;# 
  1182  039D                     	;# 
  1183  039E                     	;# 
  1184  039F                     	;# 
  1185  0415                     	;# 
  1186  0416                     	;# 
  1187  0417                     	;# 
  1188  041C                     	;# 
  1189  041D                     	;# 
  1190  041E                     	;# 
  1191  0FE4                     	;# 
  1192  0FE5                     	;# 
  1193  0FE6                     	;# 
  1194  0FE7                     	;# 
  1195  0FE8                     	;# 
  1196  0FE9                     	;# 
  1197  0FEA                     	;# 
  1198  0FEB                     	;# 
  1199  0FED                     	;# 
  1200  0FEE                     	;# 
  1201  0FEF                     	;# 
  1202  0011                     _PIR1bits	set	17
  1203  001B                     _PR2	set	27
  1204  001C                     _T2CON	set	28
  1205  001C                     _T2CONbits	set	28
  1206  001A                     _TMR2	set	26
  1207  0095                     _OPTION_REGbits	set	149
  1208  0099                     _OSCCON	set	153
  1209  009A                     _OSCSTAT	set	154
  1210  0098                     _OSCTUNE	set	152
  1211  008C                     _TRISA	set	140
  1212  008E                     _TRISC	set	142
  1213  011D                     _APFCON0	set	285
  1214  011E                     _APFCON1	set	286
  1215  010C                     _LATA	set	268
  1216  010E                     _LATC	set	270
  1217  018C                     _ANSELA	set	396
  1218  018E                     _ANSELC	set	398
  1219  019F                     _BAUDCON	set	415
  1220  0199                     _RCREG	set	409
  1221  019D                     _RCSTA	set	413
  1222  019D                     _RCSTAbits	set	413
  1223  019C                     _SPBRGH	set	412
  1224  019B                     _SPBRGL	set	411
  1225  019A                     _TXREG	set	410
  1226  019E                     _TXSTA	set	414
  1227  020C                     _WPUA	set	524
  1228  020E                     _WPUC	set	526
  1229  0293                     _CCP1CON	set	659
  1230  0292                     _CCPR1H	set	658
  1231  0291                     _CCPR1L	set	657
  1232  029E                     _CCPTMRSbits	set	670
  1233  0295                     _ECCP1AS	set	661
  1234  0296                     _PSTR1CON	set	662
  1235  0294                     _PWM1CON	set	660
  1236  0313                     _CCP3CON	set	787
  1237  031A                     _CCP4CON	set	794
  1238  0312                     _CCPR3H	set	786
  1239  0311                     _CCPR3L	set	785
  1240  0319                     _CCPR4H	set	793
  1241  0318                     _CCPR4L	set	792
  1242                           
  1243                           	psect	stringtext
  1244  0800                     __pstringtext:	
  1245  0800                     STR_2:	
  1246  0800  3445               	retlw	69	;'E'
  1247  0801  3452               	retlw	82	;'R'
  1248  0802  3452               	retlw	82	;'R'
  1249  0803  344F               	retlw	79	;'O'
  1250  0804  3452               	retlw	82	;'R'
  1251  0805  345F               	retlw	95	;'_'
  1252  0806  344E               	retlw	78	;'N'
  1253  0807  3455               	retlw	85	;'U'
  1254  0808  344D               	retlw	77	;'M'
  1255  0809  3442               	retlw	66	;'B'
  1256  080A  3445               	retlw	69	;'E'
  1257  080B  3452               	retlw	82	;'R'
  1258  080C  3453               	retlw	83	;'S'
  1259  080D  340A               	retlw	10
  1260  080E  3400               	retlw	0
  1261  080F                     STR_1:	
  1262  080F  3445               	retlw	69	;'E'
  1263  0810  3472               	retlw	114	;'r'
  1264  0811  3472               	retlw	114	;'r'
  1265  0812  346F               	retlw	111	;'o'
  1266  0813  3472               	retlw	114	;'r'
  1267  0814  3442               	retlw	66	;'B'
  1268  0815  3449               	retlw	73	;'I'
  1269  0816  340A               	retlw	10
  1270  0817  3400               	retlw	0
  1271                           
  1272                           ; #config settings
  1273  0000                     
  1274                           	psect	cinit
  1275  07F6                     start_initialization:	
  1276  07F6                     __initialization:	
  1277                           
  1278                           ; Clear objects allocated to BANK0
  1279  07F6  3020               	movlw	low __pbssBANK0
  1280  07F7  0084               	movwf	4
  1281  07F8  3000               	movlw	high __pbssBANK0
  1282  07F9  0085               	movwf	5
  1283  07FA  300F               	movlw	15
  1284  07FB  3186  261A         	fcall	clear_ram0
  1285  07FD                     end_of_initialization:	
  1286                           ;End of C runtime variable initialization code
  1287                           
  1288  07FD                     __end_of__initialization:	
  1289  07FD  0020               	movlb	0
  1290  07FE  3187  2F2B         	ljmp	_main	;jump to C main() function
  1291                           
  1292                           	psect	bssBANK0
  1293  0020                     __pbssBANK0:	
  1294  0020                     _bufferIndex:	
  1295  0020                     	ds	2
  1296  0022                     _serialBuffer:	
  1297  0022                     	ds	13
  1298                           
  1299                           	psect	clrtext
  1300  061A                     clear_ram0:	
  1301                           ;	Called with FSR0 containing the base address, and
  1302                           ;	WREG with the size to clear
  1303                           
  1304  061A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1305  061B                     clrloop0:	
  1306  061B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1307  061C  3101               	addfsr 0,1
  1308  061D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1309  061E  2E1B               	goto	clrloop0	;have we reached the end yet?
  1310  061F  3400               	retlw	0	;all done for this memory range, return
  1311                           
  1312                           	psect	cstackCOMMON
  1313  0070                     __pcstackCOMMON:	
  1314  0070                     ?_TMR2_StartTimer:	
  1315  0070                     ??_TMR2_StartTimer:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_OSCILLATOR_Initialize:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ??_OSCILLATOR_Initialize:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_EPWM1_Initialize:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ??_EPWM1_Initialize:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_EPWM1_LoadDutyValue:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_loadPWMValues:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ?_EUSART_Initialize:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ??_EUSART_Initialize:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ??_EUSART_Read:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0070                     ?_EUSART_Write:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0070                     ??_EUSART_Write:	
  1349                           ; 0 bytes @ 0x0
  1350                           
  1351  0070                     ??_getch:	
  1352                           ; 0 bytes @ 0x0
  1353                           
  1354  0070                     ?_putch:	
  1355                           ; 0 bytes @ 0x0
  1356                           
  1357  0070                     ?_PWM4_Initialize:	
  1358                           ; 0 bytes @ 0x0
  1359                           
  1360  0070                     ??_PWM4_Initialize:	
  1361                           ; 0 bytes @ 0x0
  1362                           
  1363  0070                     ?_PWM4_LoadDutyValue:	
  1364                           ; 0 bytes @ 0x0
  1365                           
  1366  0070                     ?_PWM3_Initialize:	
  1367                           ; 0 bytes @ 0x0
  1368                           
  1369  0070                     ??_PWM3_Initialize:	
  1370                           ; 0 bytes @ 0x0
  1371                           
  1372  0070                     ?_PWM3_LoadDutyValue:	
  1373                           ; 0 bytes @ 0x0
  1374                           
  1375  0070                     ?_TMR2_Initialize:	
  1376                           ; 0 bytes @ 0x0
  1377                           
  1378  0070                     ??_TMR2_Initialize:	
  1379                           ; 0 bytes @ 0x0
  1380                           
  1381  0070                     ?_PIN_MANAGER_Initialize:	
  1382                           ; 0 bytes @ 0x0
  1383                           
  1384  0070                     ??_PIN_MANAGER_Initialize:	
  1385                           ; 0 bytes @ 0x0
  1386                           
  1387  0070                     ?_SYSTEM_Initialize:	
  1388                           ; 0 bytes @ 0x0
  1389                           
  1390  0070                     ??_SYSTEM_Initialize:	
  1391                           ; 0 bytes @ 0x0
  1392                           
  1393  0070                     ?_main:	
  1394                           ; 0 bytes @ 0x0
  1395                           
  1396  0070                     ?_loadRedPWM:	
  1397                           ; 0 bytes @ 0x0
  1398                           
  1399  0070                     ?_loadGreenPWM:	
  1400                           ; 0 bytes @ 0x0
  1401                           
  1402  0070                     ?_loadBluePWM:	
  1403                           ; 0 bytes @ 0x0
  1404                           
  1405  0070                     ?_EUSART_Read:	
  1406                           ; 0 bytes @ 0x0
  1407                           
  1408  0070                     ?_getch:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?___bmul:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     EUSART_Write@txData:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ___bmul@multiplicand:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     PWM4_LoadDutyValue@dutyValue:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     PWM3_LoadDutyValue@dutyValue:	
  1424                           ; 2 bytes @ 0x0
  1425                           
  1426  0070                     EPWM1_LoadDutyValue@dutyValue:	
  1427                           ; 2 bytes @ 0x0
  1428                           
  1429                           
  1430                           ; 2 bytes @ 0x0
  1431  0070                     	ds	1
  1432  0071                     ??_putch:	
  1433  0071                     ??___bmul:	
  1434                           ; 0 bytes @ 0x1
  1435                           
  1436  0071                     putch@txData:	
  1437                           ; 0 bytes @ 0x1
  1438                           
  1439                           
  1440                           ; 1 bytes @ 0x1
  1441  0071                     	ds	1
  1442  0072                     ??_EPWM1_LoadDutyValue:	
  1443  0072                     ??_PWM4_LoadDutyValue:	
  1444                           ; 0 bytes @ 0x2
  1445                           
  1446  0072                     ??_PWM3_LoadDutyValue:	
  1447                           ; 0 bytes @ 0x2
  1448                           
  1449  0072                     ?_printf:	
  1450                           ; 0 bytes @ 0x2
  1451                           
  1452  0072                     ___bmul@product:	
  1453                           ; 2 bytes @ 0x2
  1454                           
  1455  0072                     printf@f:	
  1456                           ; 1 bytes @ 0x2
  1457                           
  1458                           
  1459                           ; 2 bytes @ 0x2
  1460  0072                     	ds	1
  1461  0073                     ___bmul@multiplier:	
  1462                           
  1463                           ; 1 bytes @ 0x3
  1464  0073                     	ds	1
  1465  0074                     ??_printf:	
  1466  0074                     ??_loadRedPWM:	
  1467                           ; 0 bytes @ 0x4
  1468                           
  1469  0074                     ??_loadGreenPWM:	
  1470                           ; 0 bytes @ 0x4
  1471                           
  1472  0074                     ??_loadBluePWM:	
  1473                           ; 0 bytes @ 0x4
  1474                           
  1475                           
  1476                           ; 0 bytes @ 0x4
  1477  0074                     	ds	2
  1478  0076                     loadRedPWM@value:	
  1479  0076                     loadGreenPWM@value:	
  1480                           ; 1 bytes @ 0x6
  1481                           
  1482  0076                     loadBluePWM@value:	
  1483                           ; 1 bytes @ 0x6
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x6
  1487  0076                     	ds	1
  1488  0077                     printf@ap:	
  1489                           
  1490                           ; 1 bytes @ 0x7
  1491  0077                     	ds	1
  1492  0078                     printf@c:	
  1493                           
  1494                           ; 1 bytes @ 0x8
  1495  0078                     	ds	1
  1496  0079                     ??_loadPWMValues:	
  1497                           
  1498                           ; 0 bytes @ 0x9
  1499  0079                     	ds	2
  1500  007B                     loadPWMValues@r:	
  1501                           
  1502                           ; 1 bytes @ 0xB
  1503  007B                     	ds	1
  1504  007C                     loadPWMValues@g:	
  1505                           
  1506                           ; 1 bytes @ 0xC
  1507  007C                     	ds	1
  1508  007D                     loadPWMValues@b:	
  1509                           
  1510                           ; 1 bytes @ 0xD
  1511  007D                     	ds	1
  1512                           
  1513                           	psect	cstackBANK0
  1514  002F                     __pcstackBANK0:	
  1515  002F                     ??_main:	
  1516                           
  1517                           ; 0 bytes @ 0x0
  1518  002F                     	ds	1
  1519  0030                     main@received:	
  1520                           
  1521                           ; 1 bytes @ 0x1
  1522  0030                     	ds	1
  1523                           
  1524                           	psect	maintext
  1525  072B                     __pmaintext:	
  1526 ;;
  1527 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1528 ;;
  1529 ;; *************** function _main *****************
  1530 ;; Defined at:
  1531 ;;		line 32 in file "mcc_generated_files/main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  received        1    1[BANK0 ] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;		None               void
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : B1F/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;Total ram usage:        2 bytes
  1550 ;; Hardware stack levels required when called:    4
  1551 ;; This function calls:
  1552 ;;		_EPWM1_LoadDutyValue
  1553 ;;		_PWM3_LoadDutyValue
  1554 ;;		_PWM4_LoadDutyValue
  1555 ;;		_SYSTEM_Initialize
  1556 ;;		_getch
  1557 ;;		_loadPWMValues
  1558 ;;		_printf
  1559 ;; This function is called by:
  1560 ;;		Startup code after reset
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _main
  1566  072B                     _main:	
  1567                           
  1568                           ;main.c: 33: SYSTEM_Initialize();
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1572  072B  3186  269B  3187   	fcall	_SYSTEM_Initialize
  1573                           
  1574                           ;main.c: 36: PWM3_LoadDutyValue(0);
  1575  072E  3000               	movlw	0
  1576  072F  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  1577  0730  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  1578  0731  3186  26DE  3187   	fcall	_PWM3_LoadDutyValue
  1579                           
  1580                           ;main.c: 37: PWM4_LoadDutyValue(0);
  1581  0734  3000               	movlw	0
  1582  0735  00F0               	movwf	PWM4_LoadDutyValue@dutyValue
  1583  0736  00F1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  1584  0737  3186  26B0  3187   	fcall	_PWM4_LoadDutyValue
  1585                           
  1586                           ;main.c: 38: EPWM1_LoadDutyValue(0);
  1587  073A  3000               	movlw	0
  1588  073B  00F0               	movwf	EPWM1_LoadDutyValue@dutyValue
  1589  073C  00F1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  1590  073D  3186  26C7  3187   	fcall	_EPWM1_LoadDutyValue
  1591  0740                     l1006:	
  1592                           ;main.c: 40: while(1){
  1593                           
  1594                           
  1595                           ;main.c: 42: char received = getch();
  1596  0740  3186  260C  3187   	fcall	_getch
  1597  0743  0020               	movlb	0	; select bank0
  1598  0744  00AF               	movwf	??_main
  1599  0745  082F               	movf	??_main,w
  1600  0746  00B0               	movwf	main@received
  1601                           
  1602                           ;main.c: 43: if (received != '\n') {
  1603  0747  300A               	movlw	10
  1604  0748  0630               	xorwf	main@received,w
  1605  0749  1903               	btfsc	3,2
  1606  074A  2F40               	goto	l1006
  1607                           
  1608                           ;main.c: 44: serialBuffer[bufferIndex] = received;
  1609  074B  0830               	movf	main@received,w
  1610  074C  00AF               	movwf	??_main
  1611  074D  0820               	movf	_bufferIndex,w
  1612  074E  3E22               	addlw	(low (_serialBuffer| 0))& (0+255)
  1613  074F  0086               	movwf	6
  1614  0750  0187               	clrf	7
  1615  0751  082F               	movf	??_main,w
  1616  0752  0081               	movwf	1
  1617                           
  1618                           ;main.c: 45: bufferIndex++;
  1619  0753  3001               	movlw	1
  1620  0754  07A0               	addwf	_bufferIndex,f
  1621  0755  3000               	movlw	0
  1622  0756  3DA1               	addwfc	_bufferIndex+1,f
  1623                           
  1624                           ;main.c: 46: if (received == ')' && bufferIndex != 13) {
  1625  0757  3029               	movlw	41
  1626  0758  0630               	xorwf	main@received,w
  1627  0759  1D03               	btfss	3,2
  1628  075A  2F6A               	goto	l1022
  1629  075B  300D               	movlw	13
  1630  075C  0620               	xorwf	_bufferIndex,w
  1631  075D  0421               	iorwf	_bufferIndex+1,w
  1632  075E  1903               	btfsc	3,2
  1633  075F  2F6A               	goto	l1022
  1634                           
  1635                           ;main.c: 47: printf("ErrorBI\n");
  1636  0760  300F               	movlw	low (STR_1| (0+32768))
  1637  0761  00F2               	movwf	printf@f
  1638  0762  3088               	movlw	high (STR_1| (0+32768))
  1639  0763  00F3               	movwf	printf@f+1
  1640  0764  3187  2710  3187   	fcall	_printf
  1641                           
  1642                           ;main.c: 48: bufferIndex = 0;
  1643  0767  0020               	movlb	0	; select bank0
  1644  0768  01A0               	clrf	_bufferIndex
  1645  0769  01A1               	clrf	_bufferIndex+1
  1646  076A                     l1022:	
  1647                           
  1648                           ;main.c: 49: }
  1649                           ;main.c: 51: if (bufferIndex == 13) {
  1650  076A  300D               	movlw	13
  1651  076B  0620               	xorwf	_bufferIndex,w
  1652  076C  0421               	iorwf	_bufferIndex+1,w
  1653  076D  1D03               	btfss	3,2
  1654  076E  2F40               	goto	l1006
  1655                           
  1656                           ;main.c: 52: bufferIndex = 0;
  1657  076F  01A0               	clrf	_bufferIndex
  1658  0770  01A1               	clrf	_bufferIndex+1
  1659                           
  1660                           ;main.c: 53: loadPWMValues();
  1661  0771  3187  2775  3187   	fcall	_loadPWMValues
  1662  0774  2F40               	goto	l1006
  1663  0775                     __end_of_main:	
  1664                           ;main.c: 54: }
  1665                           ;main.c: 55: }
  1666                           ;main.c: 56: }
  1667                           ;main.c: 57: return;
  1668                           
  1669                           
  1670                           	psect	text1
  1671  0775                     __ptext1:	
  1672 ;; *************** function _loadPWMValues *****************
  1673 ;; Defined at:
  1674 ;;		line 75 in file "mcc_generated_files/main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  b               1   13[COMMON] unsigned char 
  1679 ;;  g               1   12[COMMON] unsigned char 
  1680 ;;  r               1   11[COMMON] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1691 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;Total ram usage:        5 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    3
  1697 ;; This function calls:
  1698 ;;		___bmul
  1699 ;;		_loadBluePWM
  1700 ;;		_loadGreenPWM
  1701 ;;		_loadRedPWM
  1702 ;;		_printf
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _loadPWMValues
  1710  0775                     _loadPWMValues:	
  1711                           
  1712                           ;main.c: 76: uint8_t r, g, b;
  1713                           ;main.c: 77: if (serialBuffer[0] == '(' && serialBuffer[4] == ',' && serialBuffer[8] == 
      +                          ',' && serialBuffer[12] == ')') {
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _loadPWMValues: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1717  0775  3028               	movlw	40
  1718  0776  0020               	movlb	0	; select bank0
  1719  0777  0622               	xorwf	_serialBuffer,w
  1720  0778  1D03               	btfss	3,2
  1721  0779  2FEF               	goto	l1002
  1722  077A  302C               	movlw	44
  1723  077B  0626               	xorwf	_serialBuffer+4,w
  1724  077C  1D03               	btfss	3,2
  1725  077D  2FEF               	goto	l1002
  1726  077E  302C               	movlw	44
  1727  077F  062A               	xorwf	_serialBuffer+8,w
  1728  0780  1D03               	btfss	3,2
  1729  0781  2FEF               	goto	l1002
  1730  0782  3029               	movlw	41
  1731  0783  062E               	xorwf	_serialBuffer+12,w
  1732  0784  1D03               	btfss	3,2
  1733  0785  2FEF               	goto	l1002
  1734                           
  1735                           ;main.c: 78: r = (serialBuffer[1] - 48) * 100;
  1736  0786  3064               	movlw	100
  1737  0787  00F9               	movwf	??_loadPWMValues
  1738  0788  0879               	movf	??_loadPWMValues,w
  1739  0789  00F0               	movwf	___bmul@multiplicand
  1740  078A  0823               	movf	_serialBuffer+1,w
  1741  078B  3ED0               	addlw	208
  1742  078C  3186  268A  3187   	fcall	___bmul
  1743  078F  00FA               	movwf	??_loadPWMValues+1
  1744  0790  087A               	movf	??_loadPWMValues+1,w
  1745  0791  00FB               	movwf	loadPWMValues@r
  1746                           
  1747                           ;main.c: 79: r += (serialBuffer[2] - 48) * 10;
  1748  0792  300A               	movlw	10
  1749  0793  00F9               	movwf	??_loadPWMValues
  1750  0794  0879               	movf	??_loadPWMValues,w
  1751  0795  00F0               	movwf	___bmul@multiplicand
  1752  0796  0020               	movlb	0	; select bank0
  1753  0797  0824               	movf	_serialBuffer+2,w
  1754  0798  3ED0               	addlw	208
  1755  0799  3186  268A  3187   	fcall	___bmul
  1756  079C  00FA               	movwf	??_loadPWMValues+1
  1757  079D  087A               	movf	??_loadPWMValues+1,w
  1758  079E  07FB               	addwf	loadPWMValues@r,f
  1759                           
  1760                           ;main.c: 80: r += (serialBuffer[3] - 48);
  1761  079F  0020               	movlb	0	; select bank0
  1762  07A0  0825               	movf	_serialBuffer+3,w
  1763  07A1  3ED0               	addlw	208
  1764  07A2  00F9               	movwf	??_loadPWMValues
  1765  07A3  0879               	movf	??_loadPWMValues,w
  1766  07A4  07FB               	addwf	loadPWMValues@r,f
  1767                           
  1768                           ;main.c: 82: g = (serialBuffer[5] - 48) * 100;
  1769  07A5  3064               	movlw	100
  1770  07A6  00F9               	movwf	??_loadPWMValues
  1771  07A7  0879               	movf	??_loadPWMValues,w
  1772  07A8  00F0               	movwf	___bmul@multiplicand
  1773  07A9  0827               	movf	_serialBuffer+5,w
  1774  07AA  3ED0               	addlw	208
  1775  07AB  3186  268A  3187   	fcall	___bmul
  1776  07AE  00FA               	movwf	??_loadPWMValues+1
  1777  07AF  087A               	movf	??_loadPWMValues+1,w
  1778  07B0  00FC               	movwf	loadPWMValues@g
  1779                           
  1780                           ;main.c: 83: g += (serialBuffer[6] - 48) * 10;
  1781  07B1  300A               	movlw	10
  1782  07B2  00F9               	movwf	??_loadPWMValues
  1783  07B3  0879               	movf	??_loadPWMValues,w
  1784  07B4  00F0               	movwf	___bmul@multiplicand
  1785  07B5  0020               	movlb	0	; select bank0
  1786  07B6  0828               	movf	_serialBuffer+6,w
  1787  07B7  3ED0               	addlw	208
  1788  07B8  3186  268A  3187   	fcall	___bmul
  1789  07BB  00FA               	movwf	??_loadPWMValues+1
  1790  07BC  087A               	movf	??_loadPWMValues+1,w
  1791  07BD  07FC               	addwf	loadPWMValues@g,f
  1792                           
  1793                           ;main.c: 84: g += (serialBuffer[7] - 48);
  1794  07BE  0020               	movlb	0	; select bank0
  1795  07BF  0829               	movf	_serialBuffer+7,w
  1796  07C0  3ED0               	addlw	208
  1797  07C1  00F9               	movwf	??_loadPWMValues
  1798  07C2  0879               	movf	??_loadPWMValues,w
  1799  07C3  07FC               	addwf	loadPWMValues@g,f
  1800                           
  1801                           ;main.c: 86: b = (serialBuffer[9] - 48) * 100;
  1802  07C4  3064               	movlw	100
  1803  07C5  00F9               	movwf	??_loadPWMValues
  1804  07C6  0879               	movf	??_loadPWMValues,w
  1805  07C7  00F0               	movwf	___bmul@multiplicand
  1806  07C8  082B               	movf	_serialBuffer+9,w
  1807  07C9  3ED0               	addlw	208
  1808  07CA  3186  268A  3187   	fcall	___bmul
  1809  07CD  00FA               	movwf	??_loadPWMValues+1
  1810  07CE  087A               	movf	??_loadPWMValues+1,w
  1811  07CF  00FD               	movwf	loadPWMValues@b
  1812                           
  1813                           ;main.c: 87: b += (serialBuffer[10] - 48) * 10;
  1814  07D0  300A               	movlw	10
  1815  07D1  00F9               	movwf	??_loadPWMValues
  1816  07D2  0879               	movf	??_loadPWMValues,w
  1817  07D3  00F0               	movwf	___bmul@multiplicand
  1818  07D4  0020               	movlb	0	; select bank0
  1819  07D5  082C               	movf	_serialBuffer+10,w
  1820  07D6  3ED0               	addlw	208
  1821  07D7  3186  268A  3187   	fcall	___bmul
  1822  07DA  00FA               	movwf	??_loadPWMValues+1
  1823  07DB  087A               	movf	??_loadPWMValues+1,w
  1824  07DC  07FD               	addwf	loadPWMValues@b,f
  1825                           
  1826                           ;main.c: 88: b += (serialBuffer[11] - 48);
  1827  07DD  0020               	movlb	0	; select bank0
  1828  07DE  082D               	movf	_serialBuffer+11,w
  1829  07DF  3ED0               	addlw	208
  1830  07E0  00F9               	movwf	??_loadPWMValues
  1831  07E1  0879               	movf	??_loadPWMValues,w
  1832  07E2  07FD               	addwf	loadPWMValues@b,f
  1833                           
  1834                           ;main.c: 90: loadRedPWM(r);
  1835  07E3  087B               	movf	loadPWMValues@r,w
  1836  07E4  3186  2665  3187   	fcall	_loadRedPWM
  1837                           
  1838                           ;main.c: 91: loadGreenPWM(g);
  1839  07E7  087C               	movf	loadPWMValues@g,w
  1840  07E8  3186  265A  3187   	fcall	_loadGreenPWM
  1841                           
  1842                           ;main.c: 92: loadBluePWM(b);
  1843  07EB  087D               	movf	loadPWMValues@b,w
  1844  07EC  3186  264F         	fcall	_loadBluePWM
  1845                           
  1846                           ;main.c: 93: } else {
  1847  07EE  0008               	return
  1848  07EF                     l1002:	
  1849                           
  1850                           ;main.c: 94: printf("ERROR_NUMBERS\n");
  1851  07EF  3000               	movlw	low (STR_2| (0+32768))
  1852  07F0  00F2               	movwf	printf@f
  1853  07F1  3088               	movlw	high (STR_2| (0+32768))
  1854  07F2  00F3               	movwf	printf@f+1
  1855  07F3  3187  2710         	fcall	_printf
  1856  07F5  0008               	return
  1857  07F6                     __end_of_loadPWMValues:	
  1858                           
  1859                           	psect	text2
  1860  0710                     __ptext2:	
  1861 ;; *************** function _printf *****************
  1862 ;; Defined at:
  1863 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  f               2    2[COMMON] PTR const unsigned char 
  1866 ;;		 -> STR_2(15), STR_1(9), 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  tmpval          4    0        struct .
  1869 ;;  cp              2    0        PTR const unsigned char 
  1870 ;;  len             2    0        unsigned int 
  1871 ;;  val             2    0        unsigned int 
  1872 ;;  c               1    8[COMMON] char 
  1873 ;;  ap              1    7[COMMON] PTR void [1]
  1874 ;;		 -> ?_printf(2), 
  1875 ;;  flag            1    0        unsigned char 
  1876 ;;  prec            1    0        char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  2    2[COMMON] int 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:        7 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		_putch
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;;		_loadPWMValues
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _printf
  1903  0710                     _printf:	
  1904                           
  1905                           ;doprnt.c: 466: va_list ap;
  1906                           ;doprnt.c: 499: signed char c;
  1907                           ;doprnt.c: 506: signed char prec;
  1908                           ;doprnt.c: 508: unsigned char flag;
  1909                           ;doprnt.c: 523: union {
  1910                           ;doprnt.c: 524: unsigned long vd;
  1911                           ;doprnt.c: 525: double integ;
  1912                           ;doprnt.c: 526: } tmpval;
  1913                           ;doprnt.c: 528: unsigned int val;
  1914                           ;doprnt.c: 529: unsigned len;
  1915                           ;doprnt.c: 530: const char * cp;
  1916                           ;doprnt.c: 533: *ap = __va_start();
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1920  0710  3074               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1921  0711  00F4               	movwf	??_printf
  1922  0712  0874               	movf	??_printf,w
  1923  0713  00F7               	movwf	printf@ap
  1924  0714                     l948:	
  1925                           ;doprnt.c: 543: }
  1926                           ;doprnt.c: 1422: {
  1927                           
  1928                           ;doprnt.c: 542: continue;
  1929                           
  1930                           ;doprnt.c: 536: while(c = *f++) {
  1931                           
  1932  0714  0873               	movf	printf@f+1,w
  1933  0715  00F5               	movwf	??_printf+1
  1934  0716  0872               	movf	printf@f,w
  1935  0717  00F4               	movwf	??_printf
  1936  0718  0AF2               	incf	printf@f,f
  1937  0719  1903               	skipnz
  1938  071A  0AF3               	incf	printf@f+1,f
  1939  071B  0874               	movf	??_printf,w
  1940  071C  0084               	movwf	4
  1941  071D  0875               	movf	??_printf+1,w
  1942  071E  0085               	movwf	5
  1943  071F  0800               	movf	0,w	;code access
  1944  0720  00F6               	movwf	??_printf+2
  1945  0721  0876               	movf	??_printf+2,w
  1946  0722  00F8               	movwf	printf@c
  1947  0723  0878               	movf	printf@c,w
  1948  0724  1903               	btfsc	3,2
  1949  0725  0008               	return
  1950                           
  1951                           ;doprnt.c: 540: {
  1952                           ;doprnt.c: 541: (putch(c) );
  1953  0726  0878               	movf	printf@c,w
  1954  0727  3186  260F  3187   	fcall	_putch
  1955  072A  2F14               	goto	l948
  1956  072B                     __end_of_printf:	
  1957                           ;doprnt.c: 1469: }
  1958                           ;doprnt.c: 1533: }
  1959                           ;doprnt.c: 1540: return 0;
  1960                           ;	Return value of _printf is never used
  1961                           
  1962                           
  1963                           	psect	text3
  1964  060F                     __ptext3:	
  1965 ;; *************** function _putch *****************
  1966 ;; Defined at:
  1967 ;;		line 102 in file "mcc_generated_files/eusart.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  txData          1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  txData          1    1[COMMON] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		_EUSART_Write
  1990 ;; This function is called by:
  1991 ;;		_printf
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _putch
  1997  060F                     _putch:	
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2001                           ;putch@txData stored from wreg
  2002  060F  00F1               	movwf	putch@txData
  2003                           
  2004                           ;eusart.c: 103: EUSART_Write(txData);
  2005  0610  0871               	movf	putch@txData,w
  2006  0611  3186  2620         	fcall	_EUSART_Write
  2007  0613  0008               	return
  2008  0614                     __end_of_putch:	
  2009                           
  2010                           	psect	text4
  2011  0620                     __ptext4:	
  2012 ;; *************** function _EUSART_Write *****************
  2013 ;; Defined at:
  2014 ;;		line 91 in file "mcc_generated_files/eusart.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  txData          1    wreg     unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  txData          1    0[COMMON] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;Total ram usage:        1 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_putch
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _EUSART_Write
  2043  0620                     _EUSART_Write:	
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _EUSART_Write: [wreg]
  2047                           ;EUSART_Write@txData stored from wreg
  2048  0620  00F0               	movwf	EUSART_Write@txData
  2049  0621                     l31:	
  2050                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  2051                           
  2052  0621  0020               	movlb	0	; select bank0
  2053  0622  1E11               	btfss	17,4	;volatile
  2054  0623  2E21               	goto	l31
  2055                           
  2056                           ;eusart.c: 93: }
  2057                           ;eusart.c: 95: TXREG = txData;
  2058  0624  0870               	movf	EUSART_Write@txData,w
  2059  0625  0023               	movlb	3	; select bank3
  2060  0626  009A               	movwf	26	;volatile
  2061  0627  0008               	return
  2062  0628                     __end_of_EUSART_Write:	
  2063                           
  2064                           	psect	text5
  2065  0665                     __ptext5:	
  2066 ;; *************** function _loadRedPWM *****************
  2067 ;; Defined at:
  2068 ;;		line 60 in file "mcc_generated_files/main.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  value           1    wreg     unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  value           1    6[COMMON] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;		None               void
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;Total ram usage:        3 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		_PWM3_LoadDutyValue
  2091 ;; This function is called by:
  2092 ;;		_loadPWMValues
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _loadRedPWM
  2098  0665                     _loadRedPWM:	
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in _loadRedPWM: [wreg+status,2+status,0+pclath+cstack]
  2102                           ;loadRedPWM@value stored from wreg
  2103  0665  00F6               	movwf	loadRedPWM@value
  2104                           
  2105                           ;main.c: 61: PWM3_LoadDutyValue(value);
  2106  0666  0876               	movf	loadRedPWM@value,w
  2107  0667  00F4               	movwf	??_loadRedPWM
  2108  0668  01F5               	clrf	??_loadRedPWM+1
  2109  0669  0874               	movf	??_loadRedPWM,w
  2110  066A  00F0               	movwf	PWM3_LoadDutyValue@dutyValue
  2111  066B  0875               	movf	??_loadRedPWM+1,w
  2112  066C  00F1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2113  066D  3186  26DE         	fcall	_PWM3_LoadDutyValue
  2114  066F  0008               	return
  2115  0670                     __end_of_loadRedPWM:	
  2116                           
  2117                           	psect	text6
  2118  06DE                     __ptext6:	
  2119 ;; *************** function _PWM3_LoadDutyValue *****************
  2120 ;; Defined at:
  2121 ;;		line 81 in file "mcc_generated_files/pwm3.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  dutyValue       2    0[COMMON] unsigned int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;Total ram usage:        4 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;;		_loadRedPWM
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _PWM3_LoadDutyValue
  2151  06DE                     _PWM3_LoadDutyValue:	
  2152                           
  2153                           ;pwm3.c: 83: CCPR3L = ((dutyValue & 0x03FC) >> 2);
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  2157  06DE  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  2158  06DF  00F3               	movwf	??_PWM3_LoadDutyValue+1
  2159  06E0  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  2160  06E1  00F2               	movwf	??_PWM3_LoadDutyValue
  2161  06E2  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  2162  06E3  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  2163  06E4  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  2164  06E5  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  2165  06E6  0872               	movf	??_PWM3_LoadDutyValue,w
  2166  06E7  0026               	movlb	6	; select bank6
  2167  06E8  0091               	movwf	17	;volatile
  2168                           
  2169                           ;pwm3.c: 86: CCP3CON = (CCP3CON & 0xCF) | ((dutyValue & 0x0003) << 4);
  2170  06E9  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  2171  06EA  3903               	andlw	3
  2172  06EB  00F2               	movwf	??_PWM3_LoadDutyValue
  2173  06EC  3004               	movlw	4
  2174  06ED                     u215:	
  2175  06ED  35F2               	lslf	??_PWM3_LoadDutyValue,f
  2176  06EE  0B89               	decfsz	9,f
  2177  06EF  2EED               	goto	u215
  2178  06F0  0813               	movf	19,w	;volatile
  2179  06F1  39CF               	andlw	207
  2180  06F2  0472               	iorwf	??_PWM3_LoadDutyValue,w
  2181  06F3  0093               	movwf	19	;volatile
  2182  06F4  0008               	return
  2183  06F5                     __end_of_PWM3_LoadDutyValue:	
  2184                           
  2185                           	psect	text7
  2186  065A                     __ptext7:	
  2187 ;; *************** function _loadGreenPWM *****************
  2188 ;; Defined at:
  2189 ;;		line 64 in file "mcc_generated_files/main.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  value           1    wreg     unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  value           1    6[COMMON] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;Total ram usage:        3 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    1
  2210 ;; This function calls:
  2211 ;;		_EPWM1_LoadDutyValue
  2212 ;; This function is called by:
  2213 ;;		_loadPWMValues
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _loadGreenPWM
  2219  065A                     _loadGreenPWM:	
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _loadGreenPWM: [wreg+status,2+status,0+pclath+cstack]
  2223                           ;loadGreenPWM@value stored from wreg
  2224  065A  00F6               	movwf	loadGreenPWM@value
  2225                           
  2226                           ;main.c: 65: EPWM1_LoadDutyValue(value);
  2227  065B  0876               	movf	loadGreenPWM@value,w
  2228  065C  00F4               	movwf	??_loadGreenPWM
  2229  065D  01F5               	clrf	??_loadGreenPWM+1
  2230  065E  0874               	movf	??_loadGreenPWM,w
  2231  065F  00F0               	movwf	EPWM1_LoadDutyValue@dutyValue
  2232  0660  0875               	movf	??_loadGreenPWM+1,w
  2233  0661  00F1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2234  0662  3186  26C7         	fcall	_EPWM1_LoadDutyValue
  2235  0664  0008               	return
  2236  0665                     __end_of_loadGreenPWM:	
  2237                           
  2238                           	psect	text8
  2239  06C7                     __ptext8:	
  2240 ;; *************** function _EPWM1_LoadDutyValue *****************
  2241 ;; Defined at:
  2242 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  dutyValue       2    0[COMMON] unsigned int 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;Total ram usage:        4 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;;		_loadGreenPWM
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _EPWM1_LoadDutyValue
  2272  06C7                     _EPWM1_LoadDutyValue:	
  2273                           
  2274                           ;epwm1.c: 92: CCPR1L = ((dutyValue & 0x03FC) >> 2);
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  2278  06C7  0871               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  2279  06C8  00F3               	movwf	??_EPWM1_LoadDutyValue+1
  2280  06C9  0870               	movf	EPWM1_LoadDutyValue@dutyValue,w
  2281  06CA  00F2               	movwf	??_EPWM1_LoadDutyValue
  2282  06CB  36F3               	lsrf	??_EPWM1_LoadDutyValue+1,f
  2283  06CC  0CF2               	rrf	??_EPWM1_LoadDutyValue,f
  2284  06CD  36F3               	lsrf	??_EPWM1_LoadDutyValue+1,f
  2285  06CE  0CF2               	rrf	??_EPWM1_LoadDutyValue,f
  2286  06CF  0872               	movf	??_EPWM1_LoadDutyValue,w
  2287  06D0  0025               	movlb	5	; select bank5
  2288  06D1  0091               	movwf	17	;volatile
  2289                           
  2290                           ;epwm1.c: 95: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003) << 4);
  2291  06D2  0870               	movf	EPWM1_LoadDutyValue@dutyValue,w
  2292  06D3  3903               	andlw	3
  2293  06D4  00F2               	movwf	??_EPWM1_LoadDutyValue
  2294  06D5  3004               	movlw	4
  2295  06D6                     u225:	
  2296  06D6  35F2               	lslf	??_EPWM1_LoadDutyValue,f
  2297  06D7  0B89               	decfsz	9,f
  2298  06D8  2ED6               	goto	u225
  2299  06D9  0813               	movf	19,w	;volatile
  2300  06DA  39CF               	andlw	207
  2301  06DB  0472               	iorwf	??_EPWM1_LoadDutyValue,w
  2302  06DC  0093               	movwf	19	;volatile
  2303  06DD  0008               	return
  2304  06DE                     __end_of_EPWM1_LoadDutyValue:	
  2305                           
  2306                           	psect	text9
  2307  064F                     __ptext9:	
  2308 ;; *************** function _loadBluePWM *****************
  2309 ;; Defined at:
  2310 ;;		line 69 in file "mcc_generated_files/main.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  value           1    wreg     unsigned char 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  value           1    6[COMMON] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;		None               void
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;Total ram usage:        3 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		_PWM4_LoadDutyValue
  2333 ;; This function is called by:
  2334 ;;		_loadPWMValues
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _loadBluePWM
  2340  064F                     _loadBluePWM:	
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _loadBluePWM: [wreg+status,2+status,0+pclath+cstack]
  2344                           ;loadBluePWM@value stored from wreg
  2345  064F  00F6               	movwf	loadBluePWM@value
  2346                           
  2347                           ;main.c: 70: PWM4_LoadDutyValue(value);
  2348  0650  0876               	movf	loadBluePWM@value,w
  2349  0651  00F4               	movwf	??_loadBluePWM
  2350  0652  01F5               	clrf	??_loadBluePWM+1
  2351  0653  0874               	movf	??_loadBluePWM,w
  2352  0654  00F0               	movwf	PWM4_LoadDutyValue@dutyValue
  2353  0655  0875               	movf	??_loadBluePWM+1,w
  2354  0656  00F1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  2355  0657  3186  26B0         	fcall	_PWM4_LoadDutyValue
  2356  0659  0008               	return
  2357  065A                     __end_of_loadBluePWM:	
  2358                           
  2359                           	psect	text10
  2360  06B0                     __ptext10:	
  2361 ;; *************** function _PWM4_LoadDutyValue *****************
  2362 ;; Defined at:
  2363 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  dutyValue       2    0[COMMON] unsigned int 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;		None               void
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;Total ram usage:        4 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;;		_loadBluePWM
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _PWM4_LoadDutyValue
  2393  06B0                     _PWM4_LoadDutyValue:	
  2394                           
  2395                           ;pwm4.c: 83: CCPR4L = ((dutyValue & 0x03FC) >> 2);
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  2399  06B0  0871               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  2400  06B1  00F3               	movwf	??_PWM4_LoadDutyValue+1
  2401  06B2  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  2402  06B3  00F2               	movwf	??_PWM4_LoadDutyValue
  2403  06B4  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  2404  06B5  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  2405  06B6  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  2406  06B7  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  2407  06B8  0872               	movf	??_PWM4_LoadDutyValue,w
  2408  06B9  0026               	movlb	6	; select bank6
  2409  06BA  0098               	movwf	24	;volatile
  2410                           
  2411                           ;pwm4.c: 86: CCP4CON = (CCP4CON & 0xCF) | ((dutyValue & 0x0003) << 4);
  2412  06BB  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  2413  06BC  3903               	andlw	3
  2414  06BD  00F2               	movwf	??_PWM4_LoadDutyValue
  2415  06BE  3004               	movlw	4
  2416  06BF                     u205:	
  2417  06BF  35F2               	lslf	??_PWM4_LoadDutyValue,f
  2418  06C0  0B89               	decfsz	9,f
  2419  06C1  2EBF               	goto	u205
  2420  06C2  081A               	movf	26,w	;volatile
  2421  06C3  39CF               	andlw	207
  2422  06C4  0472               	iorwf	??_PWM4_LoadDutyValue,w
  2423  06C5  009A               	movwf	26	;volatile
  2424  06C6  0008               	return
  2425  06C7                     __end_of_PWM4_LoadDutyValue:	
  2426                           
  2427                           	psect	text11
  2428  068A                     __ptext11:	
  2429 ;; *************** function ___bmul *****************
  2430 ;; Defined at:
  2431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  multiplier      1    wreg     unsigned char 
  2434 ;;  multiplicand    1    0[COMMON] unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  multiplier      1    3[COMMON] unsigned char 
  2437 ;;  product         1    2[COMMON] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      unsigned char 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2450 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2451 ;;Total ram usage:        4 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_loadPWMValues
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function ___bmul
  2462  068A                     ___bmul:	
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2466                           ;___bmul@multiplier stored from wreg
  2467  068A  00F3               	movwf	___bmul@multiplier
  2468  068B  01F2               	clrf	___bmul@product
  2469  068C                     l958:	
  2470  068C  1C73               	btfss	___bmul@multiplier,0
  2471  068D  2E92               	goto	l962
  2472  068E  0870               	movf	___bmul@multiplicand,w
  2473  068F  00F1               	movwf	??___bmul
  2474  0690  0871               	movf	??___bmul,w
  2475  0691  07F2               	addwf	___bmul@product,f
  2476  0692                     l962:	
  2477  0692  1003               	clrc
  2478  0693  0DF0               	rlf	___bmul@multiplicand,f
  2479  0694  1003               	clrc
  2480  0695  0CF3               	rrf	___bmul@multiplier,f
  2481  0696  0873               	movf	___bmul@multiplier,w
  2482  0697  1D03               	btfss	3,2
  2483  0698  2E8C               	goto	l958
  2484  0699  0872               	movf	___bmul@product,w
  2485  069A  0008               	return
  2486  069B                     __end_of___bmul:	
  2487                           
  2488                           	psect	text12
  2489  060C                     __ptext12:	
  2490 ;; *************** function _getch *****************
  2491 ;; Defined at:
  2492 ;;		line 98 in file "mcc_generated_files/eusart.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      unsigned char 
  2499 ;; Registers used:
  2500 ;;		wreg, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		_EUSART_Read
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _getch
  2522  060C                     _getch:	
  2523                           
  2524                           ;eusart.c: 99: return EUSART_Read();
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _getch: [wreg+pclath+cstack]
  2528  060C  3186  2645         	fcall	_EUSART_Read
  2529  060E  0008               	return
  2530  060F                     __end_of_getch:	
  2531                           
  2532                           	psect	text13
  2533  0645                     __ptext13:	
  2534 ;; *************** function _EUSART_Read *****************
  2535 ;; Defined at:
  2536 ;;		line 76 in file "mcc_generated_files/eusart.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      unsigned char 
  2543 ;; Registers used:
  2544 ;;		wreg
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_getch
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _EUSART_Read
  2565  0645                     _EUSART_Read:	
  2566  0645                     l24:	
  2567                           ;eusart.c: 78: while (!PIR1bits.RCIF) {
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _EUSART_Read: [wreg]
  2571                           
  2572  0645  0020               	movlb	0	; select bank0
  2573  0646  1E91               	btfss	17,5	;volatile
  2574  0647  2E45               	goto	l24
  2575                           
  2576                           ;eusart.c: 79: }
  2577                           ;eusart.c: 81: if (1 == RCSTAbits.OERR) {
  2578  0648  0023               	movlb	3	; select bank3
  2579  0649  1C9D               	btfss	29,1	;volatile
  2580  064A  2E4D               	goto	l884
  2581                           
  2582                           ;eusart.c: 84: RCSTAbits.CREN = 0;
  2583  064B  121D               	bcf	29,4	;volatile
  2584                           
  2585                           ;eusart.c: 85: RCSTAbits.CREN = 1;
  2586  064C  161D               	bsf	29,4	;volatile
  2587  064D                     l884:	
  2588                           
  2589                           ;eusart.c: 86: }
  2590                           ;eusart.c: 88: return RCREG;
  2591  064D  0819               	movf	25,w	;volatile
  2592  064E  0008               	return
  2593  064F                     __end_of_EUSART_Read:	
  2594                           
  2595                           	psect	text14
  2596  069B                     __ptext14:	
  2597 ;; *************** function _SYSTEM_Initialize *****************
  2598 ;; Defined at:
  2599 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;		None               void
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, pclath, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    2
  2620 ;; This function calls:
  2621 ;;		_EPWM1_Initialize
  2622 ;;		_EUSART_Initialize
  2623 ;;		_OSCILLATOR_Initialize
  2624 ;;		_PIN_MANAGER_Initialize
  2625 ;;		_PWM3_Initialize
  2626 ;;		_PWM4_Initialize
  2627 ;;		_TMR2_Initialize
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _SYSTEM_Initialize
  2635  069B                     _SYSTEM_Initialize:	
  2636                           
  2637                           ;mcc.c: 71: OSCILLATOR_Initialize();
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2641  069B  3186  2614  3186   	fcall	_OSCILLATOR_Initialize
  2642                           
  2643                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2644  069E  3186  26F5  3186   	fcall	_PIN_MANAGER_Initialize
  2645                           
  2646                           ;mcc.c: 73: EUSART_Initialize();
  2647  06A1  3186  2670  3186   	fcall	_EUSART_Initialize
  2648                           
  2649                           ;mcc.c: 74: TMR2_Initialize();
  2650  06A4  3186  2628  3186   	fcall	_TMR2_Initialize
  2651                           
  2652                           ;mcc.c: 75: PWM3_Initialize();
  2653  06A7  3186  2631  3186   	fcall	_PWM3_Initialize
  2654                           
  2655                           ;mcc.c: 76: PWM4_Initialize();
  2656  06AA  3186  263B  3186   	fcall	_PWM4_Initialize
  2657                           
  2658                           ;mcc.c: 77: EPWM1_Initialize();
  2659  06AD  3186  267C         	fcall	_EPWM1_Initialize
  2660  06AF  0008               	return
  2661  06B0                     __end_of_SYSTEM_Initialize:	
  2662                           
  2663                           	psect	text15
  2664  0628                     __ptext15:	
  2665 ;; *************** function _TMR2_Initialize *****************
  2666 ;; Defined at:
  2667 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		_TMR2_StartTimer
  2690 ;; This function is called by:
  2691 ;;		_SYSTEM_Initialize
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _TMR2_Initialize
  2697  0628                     _TMR2_Initialize:	
  2698                           
  2699                           ;tmr2.c: 62: T2CON = 0x00;
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2703  0628  0020               	movlb	0	; select bank0
  2704  0629  019C               	clrf	28	;volatile
  2705                           
  2706                           ;tmr2.c: 65: PR2 = 0xFF;
  2707  062A  30FF               	movlw	255
  2708  062B  009B               	movwf	27	;volatile
  2709                           
  2710                           ;tmr2.c: 68: TMR2 = 0x00;
  2711  062C  019A               	clrf	26	;volatile
  2712                           
  2713                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
  2714  062D  1091               	bcf	17,1	;volatile
  2715                           
  2716                           ;tmr2.c: 74: TMR2_StartTimer();
  2717  062E  3186  2609         	fcall	_TMR2_StartTimer
  2718  0630  0008               	return
  2719  0631                     __end_of_TMR2_Initialize:	
  2720                           
  2721                           	psect	text16
  2722  0609                     __ptext16:	
  2723 ;; *************** function _TMR2_StartTimer *****************
  2724 ;; Defined at:
  2725 ;;		line 77 in file "mcc_generated_files/tmr2.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;		None               void
  2732 ;; Registers used:
  2733 ;;		None
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_TMR2_Initialize
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _TMR2_StartTimer
  2754  0609                     _TMR2_StartTimer:	
  2755                           
  2756                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _TMR2_StartTimer: []
  2760  0609  0020               	movlb	0	; select bank0
  2761  060A  151C               	bsf	28,2	;volatile
  2762  060B  0008               	return
  2763  060C                     __end_of_TMR2_StartTimer:	
  2764                           
  2765                           	psect	text17
  2766  063B                     __ptext17:	
  2767 ;; *************** function _PWM4_Initialize *****************
  2768 ;; Defined at:
  2769 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_SYSTEM_Initialize
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function _PWM4_Initialize
  2798  063B                     _PWM4_Initialize:	
  2799                           
  2800                           ;pwm4.c: 68: CCP4CON = 0x3C;
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
  2804  063B  303C               	movlw	60
  2805  063C  0026               	movlb	6	; select bank6
  2806  063D  009A               	movwf	26	;volatile
  2807                           
  2808                           ;pwm4.c: 71: CCPR4L = 0x7F;
  2809  063E  307F               	movlw	127
  2810  063F  0098               	movwf	24	;volatile
  2811                           
  2812                           ;pwm4.c: 74: CCPR4H = 0x00;
  2813  0640  0199               	clrf	25	;volatile
  2814                           
  2815                           ;pwm4.c: 78: CCPTMRSbits.C4TSEL = 0x0;
  2816  0641  303F               	movlw	-193
  2817  0642  0025               	movlb	5	; select bank5
  2818  0643  059E               	andwf	30,f	;volatile
  2819  0644  0008               	return
  2820  0645                     __end_of_PWM4_Initialize:	
  2821                           
  2822                           	psect	text18
  2823  0631                     __ptext18:	
  2824 ;; *************** function _PWM3_Initialize *****************
  2825 ;; Defined at:
  2826 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;		None               void
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;Total ram usage:        0 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_SYSTEM_Initialize
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _PWM3_Initialize
  2855  0631                     _PWM3_Initialize:	
  2856                           
  2857                           ;pwm3.c: 68: CCP3CON = 0x3C;
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  2861  0631  303C               	movlw	60
  2862  0632  0026               	movlb	6	; select bank6
  2863  0633  0093               	movwf	19	;volatile
  2864                           
  2865                           ;pwm3.c: 71: CCPR3L = 0x7F;
  2866  0634  307F               	movlw	127
  2867  0635  0091               	movwf	17	;volatile
  2868                           
  2869                           ;pwm3.c: 74: CCPR3H = 0x00;
  2870  0636  0192               	clrf	18	;volatile
  2871                           
  2872                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x0;
  2873  0637  30CF               	movlw	-49
  2874  0638  0025               	movlb	5	; select bank5
  2875  0639  059E               	andwf	30,f	;volatile
  2876  063A  0008               	return
  2877  063B                     __end_of_PWM3_Initialize:	
  2878                           
  2879                           	psect	text19
  2880  06F5                     __ptext19:	
  2881 ;; *************** function _PIN_MANAGER_Initialize *****************
  2882 ;; Defined at:
  2883 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, status,2
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_SYSTEM_Initialize
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _PIN_MANAGER_Initialize
  2912  06F5                     _PIN_MANAGER_Initialize:	
  2913                           
  2914                           ;pin_manager.c: 51: LATA = 0x00;
  2915                           
  2916                           ;incstack = 0
  2917                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2918  06F5  0022               	movlb	2	; select bank2
  2919  06F6  018C               	clrf	12	;volatile
  2920                           
  2921                           ;pin_manager.c: 52: TRISA = 0x3B;
  2922  06F7  303B               	movlw	59
  2923  06F8  0021               	movlb	1	; select bank1
  2924  06F9  008C               	movwf	12	;volatile
  2925                           
  2926                           ;pin_manager.c: 53: ANSELA = 0x10;
  2927  06FA  3010               	movlw	16
  2928  06FB  0023               	movlb	3	; select bank3
  2929  06FC  008C               	movwf	12	;volatile
  2930                           
  2931                           ;pin_manager.c: 54: WPUA = 0x00;
  2932  06FD  0024               	movlb	4	; select bank4
  2933  06FE  018C               	clrf	12	;volatile
  2934                           
  2935                           ;pin_manager.c: 56: LATC = 0x00;
  2936  06FF  0022               	movlb	2	; select bank2
  2937  0700  018E               	clrf	14	;volatile
  2938                           
  2939                           ;pin_manager.c: 57: TRISC = 0x1D;
  2940  0701  301D               	movlw	29
  2941  0702  0021               	movlb	1	; select bank1
  2942  0703  008E               	movwf	14	;volatile
  2943                           
  2944                           ;pin_manager.c: 58: ANSELC = 0x0D;
  2945  0704  300D               	movlw	13
  2946  0705  0023               	movlb	3	; select bank3
  2947  0706  008E               	movwf	14	;volatile
  2948                           
  2949                           ;pin_manager.c: 59: WPUC = 0x00;
  2950  0707  0024               	movlb	4	; select bank4
  2951  0708  018E               	clrf	14	;volatile
  2952                           
  2953                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  2954  0709  0021               	movlb	1	; select bank1
  2955  070A  1795               	bsf	21,7	;volatile
  2956                           
  2957                           ;pin_manager.c: 63: APFCON0 = 0x84;
  2958  070B  3084               	movlw	132
  2959  070C  0022               	movlb	2	; select bank2
  2960  070D  009D               	movwf	29	;volatile
  2961                           
  2962                           ;pin_manager.c: 65: APFCON1 = 0x00;
  2963  070E  019E               	clrf	30	;volatile
  2964  070F  0008               	return
  2965  0710                     __end_of_PIN_MANAGER_Initialize:	
  2966                           
  2967                           	psect	text20
  2968  0614                     __ptext20:	
  2969 ;; *************** function _OSCILLATOR_Initialize *****************
  2970 ;; Defined at:
  2971 ;;		line 80 in file "mcc_generated_files/mcc.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		wreg, status,2
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_SYSTEM_Initialize
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _OSCILLATOR_Initialize
  3000  0614                     _OSCILLATOR_Initialize:	
  3001                           
  3002                           ;mcc.c: 82: OSCCON = 0x7A;
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3006  0614  307A               	movlw	122
  3007  0615  0021               	movlb	1	; select bank1
  3008  0616  0099               	movwf	25	;volatile
  3009                           
  3010                           ;mcc.c: 84: OSCSTAT = 0x00;
  3011  0617  019A               	clrf	26	;volatile
  3012                           
  3013                           ;mcc.c: 86: OSCTUNE = 0x00;
  3014  0618  0198               	clrf	24	;volatile
  3015  0619  0008               	return
  3016  061A                     __end_of_OSCILLATOR_Initialize:	
  3017                           
  3018                           	psect	text21
  3019  0670                     __ptext21:	
  3020 ;; *************** function _EUSART_Initialize *****************
  3021 ;; Defined at:
  3022 ;;		line 56 in file "mcc_generated_files/eusart.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_SYSTEM_Initialize
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _EUSART_Initialize
  3051  0670                     _EUSART_Initialize:	
  3052                           
  3053                           ;eusart.c: 60: BAUDCON = 0x48;
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _EUSART_Initialize: [wreg]
  3057  0670  3048               	movlw	72
  3058  0671  0023               	movlb	3	; select bank3
  3059  0672  009F               	movwf	31	;volatile
  3060                           
  3061                           ;eusart.c: 63: RCSTA = 0x90;
  3062  0673  3090               	movlw	144
  3063  0674  009D               	movwf	29	;volatile
  3064                           
  3065                           ;eusart.c: 66: TXSTA = 0x26;
  3066  0675  3026               	movlw	38
  3067  0676  009E               	movwf	30	;volatile
  3068                           
  3069                           ;eusart.c: 69: SPBRGL = 0xA0;
  3070  0677  30A0               	movlw	160
  3071  0678  009B               	movwf	27	;volatile
  3072                           
  3073                           ;eusart.c: 72: SPBRGH = 0x01;
  3074  0679  3001               	movlw	1
  3075  067A  009C               	movwf	28	;volatile
  3076  067B  0008               	return
  3077  067C                     __end_of_EUSART_Initialize:	
  3078                           
  3079                           	psect	text22
  3080  067C                     __ptext22:	
  3081 ;; *************** function _EPWM1_Initialize *****************
  3082 ;; Defined at:
  3083 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_SYSTEM_Initialize
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _EPWM1_Initialize
  3112  067C                     _EPWM1_Initialize:	
  3113                           
  3114                           ;epwm1.c: 68: CCP1CON = 0x3C;
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  3118  067C  303C               	movlw	60
  3119  067D  0025               	movlb	5	; select bank5
  3120  067E  0093               	movwf	19	;volatile
  3121                           
  3122                           ;epwm1.c: 71: ECCP1AS = 0x00;
  3123  067F  0195               	clrf	21	;volatile
  3124                           
  3125                           ;epwm1.c: 74: PWM1CON = 0x80;
  3126  0680  3080               	movlw	128
  3127  0681  0094               	movwf	20	;volatile
  3128                           
  3129                           ;epwm1.c: 77: PSTR1CON = 0x01;
  3130  0682  3001               	movlw	1
  3131  0683  0096               	movwf	22	;volatile
  3132                           
  3133                           ;epwm1.c: 80: CCPR1L = 0x7F;
  3134  0684  307F               	movlw	127
  3135  0685  0091               	movwf	17	;volatile
  3136                           
  3137                           ;epwm1.c: 83: CCPR1H = 0x00;
  3138  0686  0192               	clrf	18	;volatile
  3139                           
  3140                           ;epwm1.c: 87: CCPTMRSbits.C1TSEL = 0x0;
  3141  0687  30FC               	movlw	-4
  3142  0688  059E               	andwf	30,f	;volatile
  3143  0689  0008               	return
  3144  068A                     __end_of_EPWM1_Initialize:	
  3145  007E                     btemp	set	126	;btemp
  3146  007E                     wtemp	set	126
  3147  007E                     wtemp0	set	126
  3148  0080                     wtemp1	set	128
  3149  0082                     wtemp2	set	130
  3150  0084                     wtemp3	set	132
  3151  0086                     wtemp4	set	134
  3152  0088                     wtemp5	set	136
  3153  007F                     wtemp6	set	127
  3154  007E                     ttemp	set	126
  3155  007E                     ttemp0	set	126
  3156  0081                     ttemp1	set	129
  3157  0084                     ttemp2	set	132
  3158  0087                     ttemp3	set	135
  3159  007F                     ttemp4	set	127
  3160  007E                     ltemp	set	126
  3161  007E                     ltemp0	set	126
  3162  0082                     ltemp1	set	130
  3163  0086                     ltemp2	set	134
  3164  0080                     ltemp3	set	128


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      17
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_loadPWMValues
    _loadPWMValues->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _loadRedPWM->_PWM3_LoadDutyValue
    _loadGreenPWM->_EPWM1_LoadDutyValue
    _loadBluePWM->_PWM4_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1910
                                              0 BANK0      2     2      0
                _EPWM1_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
                              _getch
                      _loadPWMValues
                             _printf
 ---------------------------------------------------------------------------------
 (1) _loadPWMValues                                        5     5      0    1197
                                              9 COMMON     5     5      0
                             ___bmul
                        _loadBluePWM
                       _loadGreenPWM
                         _loadRedPWM
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     196
                                              2 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _loadRedPWM                                           3     3      0     172
                                              4 COMMON     3     3      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _loadGreenPWM                                         3     3      0     172
                                              4 COMMON     3     3      0
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _loadBluePWM                                          3     3      0     172
                                              4 COMMON     3     3      0
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM4_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     410
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _PWM3_LoadDutyValue
   _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _getch
     _EUSART_Read
   _loadPWMValues
     ___bmul
     _loadBluePWM
       _PWM4_LoadDutyValue
     _loadGreenPWM
       _EPWM1_LoadDutyValue
     _loadRedPWM
       _PWM3_LoadDutyValue
     _printf
       _putch
         _EUSART_Write
   _printf
     _putch
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      11       5       21.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Oct 07 10:58:09 2016

                 ___bmul@product 0072                      __CFG_CP$OFF 0000                               l31 0621  
                             l24 0645                              l962 0692                              l884 064D  
                            l948 0714                              l958 068C                              u205 06BF  
                            u215 06ED                              u225 06D6                              _PR2 001B  
                   __CFG_CPD$OFF 0000                  _TMR2_Initialize 0628                  _PWM4_Initialize 063B  
                   __CFG_BORV$LO 0000           __size_of_loadPWMValues 0081                              wreg 0009  
                   __CFG_IESO$ON 0000                     ?_EUSART_Read 0070                     __CFG_LVP$OFF 0000  
                           l1002 07EF                             l1022 076A                             l1006 0740  
                           STR_1 080F                             STR_2 0800                             _LATA 010C  
                           _LATC 010E                             _TMR2 001A                             _WPUA 020C  
                           _WPUC 020E                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                 loadPWMValues@b 007D                   loadPWMValues@g 007C                   loadPWMValues@r 007B  
                           _main 072B                     ?_loadBluePWM 0070                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0003  
                           ttemp 007E                             wtemp 007E            ??_EPWM1_LoadDutyValue 0072  
              ___bmul@multiplier 0073                    __CFG_MCLRE$ON 0000                    __CFG_PLLEN$ON 0000  
                  ?_EUSART_Write 0070   __size_of_OSCILLATOR_Initialize 0006    __end_of_OSCILLATOR_Initialize 061A  
                          ?_main 0070                    __CFG_WDTE$OFF 0000                            _T2CON 001C  
                          _RCREG 0199                            _RCSTA 019D               _PWM4_LoadDutyValue 06B0  
                          _TRISA 008C                            _TRISC 008E                            _TXREG 019A  
                          _TXSTA 019E                     main@received 0030                            _getch 060C  
            ?_PWM4_LoadDutyValue 0070                            _putch 060F          __end_of_PWM3_Initialize 063B  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                    ?_loadGreenPWM 0070                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
                _TMR2_StartTimer 0609                    _loadPWMValues 0775                  __initialization 07F6  
                   __end_of_main 0775             ??_PWM4_LoadDutyValue 0072                   ??_EUSART_Write 0070  
        __end_of_PWM4_Initialize 0645          __end_of_TMR2_Initialize 0631                           ??_main 002F  
                         ?_getch 0070                           _CCPR1H 0292                           _CCPR3H 0312  
                         _CCPR1L 0291                           _CCPR4H 0319                           _CCPR3L 0311  
                         _CCPR4L 0318                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELC 018E                   ??_loadGreenPWM 0074                           _OSCCON 0099  
                         _SPBRGH 019C                           _SPBRGL 019B                   ?_loadPWMValues 0070  
                 __CFG_PWRTE$OFF 0000                           ___bmul 068A      __size_of_PWM3_LoadDutyValue 0017  
                 __CFG_STVREN$ON 0000                           _printf 0710          __end_of_TMR2_StartTimer 060C  
               ?_PWM3_Initialize 0070             __size_of_EUSART_Read 000A                _SYSTEM_Initialize 069B  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070             __size_of_loadBluePWM 000B  
            ___bmul@multiplicand 0070                ?_EPWM1_Initialize 0070                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0070                    __end_of_getch 060F               ??_EPWM1_Initialize 0070  
                  __end_of_putch 0614                 ?_TMR2_Initialize 0070                 ?_PWM4_Initialize 0070  
    PWM4_LoadDutyValue@dutyValue 0070                   _OPTION_REGbits 0095                          ??_getch 0070  
      __end_of_SYSTEM_Initialize 06B0                          ??_putch 0071                       __pbssBANK0 0020  
           __end_of_EUSART_Write 0628                  ??_loadPWMValues 0079                       __pmaintext 072B  
                        ?___bmul 0070                          _CCP1CON 0293                          _CCP3CON 0313  
                        _CCP4CON 031A                          _ECCP1AS 0295                          _BAUDCON 019F  
                        _APFCON0 011D                          _APFCON1 011E                          ?_printf 0072  
           __end_of_loadGreenPWM 0665                          _OSCSTAT 009A                          _OSCTUNE 0098  
                        _PWM1CON 0294                 ?_TMR2_StartTimer 0070      __end_of_EPWM1_LoadDutyValue 06DE  
                     _loadRedPWM 0665                  __size_of___bmul 0011                          __ptext1 0775  
                        __ptext2 0710                          __ptext3 060F                          __ptext4 0620  
                        __ptext5 0665                          __ptext6 06DE                          __ptext7 065A  
                        __ptext8 06C7                          __ptext9 064F                  __size_of_printf 001B  
          _OSCILLATOR_Initialize 0614                        _T2CONbits 001C         ??_PIN_MANAGER_Initialize 0070  
     __size_of_SYSTEM_Initialize 0015                          clrloop0 061B             end_of_initialization 07FD  
              _EUSART_Initialize 0670               ?_EUSART_Initialize 0070                        _RCSTAbits 019D  
                        printf@c 0078                          printf@f 0072      __size_of_PWM4_LoadDutyValue 0017  
                   __pstringtext 0800              ??_EUSART_Initialize 0070                 __CFG_FOSC$INTOSC 0000  
          __size_of_EUSART_Write 0008                  loadRedPWM@value 0076        __end_of_EUSART_Initialize 067C  
     __end_of_PWM3_LoadDutyValue 06F5                      ?_loadRedPWM 0070            __size_of_loadGreenPWM 000B  
                 __end_of___bmul 069B                     _EUSART_Write 0620           ?_OSCILLATOR_Initialize 0070  
                 __end_of_printf 072B              start_initialization 07F6        __size_of_EPWM1_Initialize 000E  
__size_of_PIN_MANAGER_Initialize 001B                    ??_EUSART_Read 0070                      putch@txData 0071  
   EPWM1_LoadDutyValue@dutyValue 0070                    ??_loadBluePWM 0074                     _loadGreenPWM 065A  
       __size_of_PWM3_Initialize 000A                 loadBluePWM@value 0076                         ??___bmul 0071  
                    _CCPTMRSbits 029E                         ??_printf 0074                        ___latbits 0002  
                  __pcstackBANK0 002F         __size_of_PWM4_Initialize 000A         __size_of_TMR2_Initialize 0009  
            __size_of_loadRedPWM 000B       __size_of_EUSART_Initialize 000C              __end_of_EUSART_Read 064F  
          __end_of_loadPWMValues 07F6           _PIN_MANAGER_Initialize 06F5              __end_of_loadBluePWM 065A  
                 __size_of_getch 0003                   __size_of_putch 0005                        clear_ram0 061A  
       __size_of_TMR2_StartTimer 0003                      _bufferIndex 0020                         _PIR1bits 0011  
   __size_of_EPWM1_LoadDutyValue 0017                         _PSTR1CON 0296                ??_PWM3_Initialize 0070  
               _EPWM1_Initialize 067C                      _EUSART_Read 0645                ??_TMR2_Initialize 0070  
              ??_PWM4_Initialize 0070                      _loadBluePWM 064F                     ??_loadRedPWM 0074  
     __end_of_PWM4_LoadDutyValue 06C7          ??_OSCILLATOR_Initialize 0070               _PWM3_LoadDutyValue 06DE  
                       __ptext10 06B0                         __ptext11 068A                         __ptext20 0614  
                       __ptext12 060C                         __ptext21 0670                         __ptext13 0645  
                       __ptext22 067C                         __ptext14 069B                         __ptext15 0628  
                       __ptext16 0609                         __ptext17 063B                         __ptext18 0631  
                       __ptext19 06F5              ?_PWM3_LoadDutyValue 0070               __end_of_loadRedPWM 0670  
                  __size_of_main 004A                     _serialBuffer 0022             ??_PWM3_LoadDutyValue 0072  
              ??_TMR2_StartTimer 0070          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                       printf@ap 0077      PWM3_LoadDutyValue@dutyValue 0070              _EPWM1_LoadDutyValue 06C7  
              loadGreenPWM@value 0076               EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 0710  
                _PWM3_Initialize 0631         __end_of_EPWM1_Initialize 068A             ?_EPWM1_LoadDutyValue 0070  
